services:
    db:
        image: postgres:15-alpine
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: kick_monitor
        volumes:
            - postgres_data:/var/lib/postgresql/data
        ports:
            - "5432:5432"
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres -h localhost"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 10s
        networks:
            - app-net

    flaresolverr:
        image: ghcr.io/flaresolverr/flaresolverr:latest
        environment:
            - LOG_LEVEL=${LOG_LEVEL:-info}
            - LOG_HTML=${LOG_HTML:-false}
            - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
        ports:
            - "8191:8191"
        healthcheck:
            test:
                ["CMD-SHELL", "curl -f http://localhost:8191/health || exit 1"]
            interval: 20s
            timeout: 10s
            retries: 5
            start_period: 15s
        networks:
            - app-net

    kick-monitor:
        build: .
        ports:
            - "8080:8080"
        environment:
            DB_HOST: db
            DB_PORT: 5432
            DB_USER: postgres
            DB_PASSWORD: postgres
            DB_NAME: kick_monitor
            PROXY_URL: http://flaresolverr:8191/v1
            JWT_SECRET: ${JWT_SECRET}
        depends_on:
            db:
                condition: service_healthy
            flaresolverr:
                condition: service_healthy
        networks:
            - app-net
        restart: on-failure

volumes:
    postgres_data:

networks:
    app-net:
        driver: bridge
